import crypto from "node:crypto";function b64url(buf){return Buffer.from(buf).toString("base64").replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/g,"")}function sign(payloadObj,secret){const data=b64url(Buffer.from(JSON.stringify(payloadObj)));const sig=b64url(crypto.createHmac("sha256",secret).update(data).digest());return `${data}.${sig}`}export default async function handler(req,res){const allowedOrigin=process.env.ALLOWED_ORIGIN||"";if(req.method==="OPTIONS"){res.setHeader("Access-Control-Allow-Origin",allowedOrigin||"*");res.setHeader("Access-Control-Allow-Methods","POST, OPTIONS");res.setHeader("Access-Control-Allow-Headers","Content-Type");res.setHeader("Cache-Control","no-store, no-cache, must-revalidate, proxy-revalidate");res.setHeader("Pragma","no-cache");res.setHeader("Expires","0");return res.status(204).end()}if(req.method!=="POST")return res.status(405).json({ok:false,error:"Method Not Allowed"});try{const chunks=[];for await(const ch of req)chunks.push(ch);const raw=Buffer.concat(chunks).toString("utf8")||"{}";const body=JSON.parse(raw);const pass=String(body?.pass||"");const PASS=process.env.ADMIN_PASSCODE||"";const SECRET=process.env.TOKEN_SECRET||"dev";if(!PASS||!SECRET)return res.status(500).json({ok:false,error:"ADMIN_PASSCODE/TOKEN_SECRET not set"});if(pass!==PASS)return res.status(401).json({ok:false,error:"Wrong passcode"});const now=Date.now();const payload={iat:now,exp:now+7*24*3600*1000};const token=sign(payload,SECRET);const cookie=[`adm=${token}`,"Path=/","HttpOnly","SameSite=Lax","Secure",`Max-Age=${7*24*3600}`].join("; ");res.setHeader("Set-Cookie",cookie);res.setHeader("Access-Control-Allow-Origin",allowedOrigin||"*");res.setHeader("Cache-Control","no-store, no-cache, must-revalidate, proxy-revalidate");res.setHeader("Pragma","no-cache");res.setHeader("Expires","0");return res.status(200).json({ok:true})}catch(e){res.setHeader("Cache-Control","no-store, no-cache, must-revalidate, proxy-revalidate");res.setHeader("Pragma","no-cache");res.setHeader("Expires","0");return res.status(500).json({ok:false,error:String(e)})}}